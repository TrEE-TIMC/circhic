
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/technical_contact_map/plot_ccres_square_vs_circular.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_technical_contact_map_plot_ccres_square_vs_circular.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_technical_contact_map_plot_ccres_square_vs_circular.py:


===============================
Square versus circular displays
===============================

.. GENERATED FROM PYTHON SOURCE LINES 6-73



.. image-sg:: /auto_examples/technical_contact_map/images/sphx_glr_plot_ccres_square_vs_circular_001.png
   :alt: square, circular  inner gdis = 200 kb, outer gdis = 60 kb
   :srcset: /auto_examples/technical_contact_map/images/sphx_glr_plot_ccres_square_vs_circular_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Text(0.5, 1.0, 'circular\n inner gdis = 200 kb, outer gdis = 60 kb')





|

.. code-block:: default

    import numpy as np

    import matplotlib  # Need this to check the version

    import matplotlib.pyplot as plt

    from matplotlib import colors

    from circhic import datasets
    from circhic import CircHiCFigure
    from circhic.utils import generate_circular_map
    from circhic.utils import generate_borders

    from iced.normalization import ICE_normalization

    #load the data
    data = datasets.load_ccrescentus()
    counts = data["counts"]
    lengths = data["nbins"]
    counts, bias = ICE_normalization(counts, output_bias=True)

    granularity = 0.5
    inner_radius = 0.005
    resolution = 9958
    inner_gdis, outer_gdis = 2000000, 600000

    Circ = generate_circular_map(counts, granularity=granularity,
                                 inner_radius=inner_radius, resolution=resolution,
                                 inner_gdis=inner_gdis, outer_gdis=outer_gdis,
                                 mode='reflect', origin=1,
                                 chromosome_type='circular')

    Bord = generate_borders(counts, granularity=granularity,
                            inner_radius=inner_radius, resolution=resolution,
                            inner_gdis=inner_gdis, outer_gdis=outer_gdis, origin=1,
                            chromosome_type='circular', thick_r=0.006)

    vmax = np.max([counts[i, (i+1) % lengths[0]] for i in range(lengths[0])])
    vmin = 77

    plt.figure(figsize=(15, 12))

    plt.subplot(1, 2, 1)

    if matplotlib.__version__ < "3.2.0":
        norm = colors.SymLogNorm(vmin, vmax=vmax)
    else:
        norm = colors.SymLogNorm(vmin, vmax=vmax, base=np.e)

    plt.imshow(counts, norm=norm, cmap='bone_r')
    plt.xticks([])
    plt.yticks([])
    plt.title('square', pad=10, fontsize=20)

    plt.subplot(1, 2, 2)

    plt.imshow(Circ, norm=norm, cmap='bone_r',
               interpolation='None')
    plt.imshow(vmax*Bord, norm=norm, cmap='Greys',
               interpolation='None')

    plt.xticks([])
    plt.yticks([])
    plt.axis('off')

    plt.title('circular\n inner gdis = 200 kb, outer gdis = 60 kb', pad=10,
              fontsize=20)


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  2.040 seconds)


.. _sphx_glr_download_auto_examples_technical_contact_map_plot_ccres_square_vs_circular.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/TrEE-TIMC/circhic/gh-pages?urlpath=lab/tree/notebooks/auto_examples/technical_contact_map/plot_ccres_square_vs_circular.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_ccres_square_vs_circular.py <plot_ccres_square_vs_circular.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_ccres_square_vs_circular.ipynb <plot_ccres_square_vs_circular.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
