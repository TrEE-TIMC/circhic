
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/technical_simple_plots/plot_bands.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_technical_simple_plots_plot_bands.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_technical_simple_plots_plot_bands.py:


==============
Plotting bands
==============

Here's a small example showcasing how to plot circular bands indicating
categorical data.

.. GENERATED FROM PYTHON SOURCE LINES 9-12

.. code-block:: default

    import numpy as np
    from circhic._base import CircHiCFigure








.. GENERATED FROM PYTHON SOURCE LINES 13-14

First, simulate some data

.. GENERATED FROM PYTHON SOURCE LINES 14-21

.. code-block:: default

    lengths = np.array([3500])
    random_state = np.random.RandomState(42)
    simulated_bands = random_state.randint(0, lengths.sum(), 100)
    simulated_bands.sort()
    simulated_bands = simulated_bands.reshape(-1, 2)
    labels = np.random.randint(0, 3, simulated_bands.shape[0])








.. GENERATED FROM PYTHON SOURCE LINES 22-25

In this first example, we are just going to plot a binary band: in or out of
the category. It can be useful to indicate the presence of a gene or a
geneset, or open/close chromatine.

.. GENERATED FROM PYTHON SOURCE LINES 25-33

.. code-block:: default

    circhicfig = CircHiCFigure(lengths)
    _, ax = circhicfig.plot_bands(
        simulated_bands[:, 0],
        simulated_bands[:, 1],
        colors=np.repeat("0.5", simulated_bands.shape[0]),
        inner_radius=0.7, outer_radius=0.8)
    ax.set_title("Plotting binary bands", fontweight="bold")




.. image-sg:: /auto_examples/technical_simple_plots/images/sphx_glr_plot_bands_001.png
   :alt: Plotting binary bands
   :srcset: /auto_examples/technical_simple_plots/images/sphx_glr_plot_bands_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Text(0.5, 1.0617147722273774, 'Plotting binary bands')



.. GENERATED FROM PYTHON SOURCE LINES 34-36

In this second example, we are going to provide specific category.Â To do
this, we create a vector of colors representing the labels

.. GENERATED FROM PYTHON SOURCE LINES 36-46

.. code-block:: default

    colors = np.asarray(["C%d" % d for d in labels])
    circhicfig = CircHiCFigure(lengths)
    _, ax = circhicfig.plot_bands(
        simulated_bands[:, 0],
        simulated_bands[:, 1],
        colors=colors,
        inner_radius=0.7, outer_radius=0.8)
    ax.set_title("Plotting 3 categorical bands", fontweight="bold")





.. image-sg:: /auto_examples/technical_simple_plots/images/sphx_glr_plot_bands_002.png
   :alt: Plotting 3 categorical bands
   :srcset: /auto_examples/technical_simple_plots/images/sphx_glr_plot_bands_002.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Text(0.5, 1.0617147722273774, 'Plotting 3 categorical bands')



.. GENERATED FROM PYTHON SOURCE LINES 47-48

Here, we do the same but for a linear chromosome

.. GENERATED FROM PYTHON SOURCE LINES 48-55

.. code-block:: default

    circhicfig = CircHiCFigure(lengths, chromosome_type="linear")
    _, ax = circhicfig.plot_bands(
        simulated_bands[:, 0],
        simulated_bands[:, 1],
        colors=colors,
        inner_radius=0.7, outer_radius=0.8)




.. image-sg:: /auto_examples/technical_simple_plots/images/sphx_glr_plot_bands_003.png
   :alt: plot bands
   :srcset: /auto_examples/technical_simple_plots/images/sphx_glr_plot_bands_003.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.472 seconds)


.. _sphx_glr_download_auto_examples_technical_simple_plots_plot_bands.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/TrEE-TIMC/circhic/gh-pages?urlpath=lab/tree/notebooks/auto_examples/technical_simple_plots/plot_bands.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_bands.py <plot_bands.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_bands.ipynb <plot_bands.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
