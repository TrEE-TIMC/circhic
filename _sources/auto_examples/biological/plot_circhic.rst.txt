.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_biological_plot_circhic.py>`     to download the full example code or to run this example in your browser via Binder
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_auto_examples_biological_plot_circhic.py:


===============================================
a circHiC figure showing biases and mappability
===============================================



.. image:: /auto_examples/biological/images/sphx_glr_plot_circhic_001.png
    :alt: plot circhic
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /home/travis/virtualenv/python3.8.0/lib/python3.8/site-packages/iced/normalization/_ca_utils.py:8: UserWarning: The API of this module is likely to change. Use only for testing purposes
      warnings.warn(

    <matplotlib.legend.Legend object at 0x7f75fc1bc910>





|


.. code-block:: default

    import numpy as np

    import matplotlib.pyplot as plt

    from circhic import datasets
    from circhic import CircHiCFigure


    from iced.normalization import ICE_normalization


    granularity = 0.5
    # Load the data, compute the cumulative raw counts.
    data = datasets.load_ccrescentus()
    counts = data["counts"]
    lengths = data["lengths"]

    cumul_raw_counts = counts.sum(axis=0)
    # Normale the data using ICE, and keep the biases
    counts, bias = ICE_normalization(counts, output_bias=True)

    fig = plt.figure(figsize=(6, 6))
    circhicfig = CircHiCFigure(lengths, figure=fig)
    m, ax = circhicfig.plot_hic(counts, granularity=granularity,
                                outer_radius=0.75, inner_radius=0.1,
                                inner_gdis=120, outer_gdis=60,
                                vmin=77, cmap="bone_r")

    circhicfig.plot_raxis()

    # Assume you want to plot data from that ranges in a polar plot outside of the
    # first one. Then the 0 axis should be at, say, 80% of the axis
    bar, _ = circhicfig.plot_bars(
        cumul_raw_counts, inner_radius=0.8, outer_radius=0.9,
        color="0")

    # Now, plot a last plot, for the top 10% of the original axes
    lines, _ = circhicfig.plot_lines(
        bias, color="0", inner_radius=0.9, outer_radius=1)

    cab = circhicfig.set_colorbar(m, orientation="horizontal")
    cab.set_label("Normalized contact counts", fontweight="bold",
                  fontsize="small")

    # Now, try to do a simple "theta-axis" on the outer
    ticklabels = [
            "%d kb" % (i * 10) for i in np.arange(0, lengths.sum(), 50)[:-1]]
    ticklabels[0] = "ORI"
    ax = circhicfig.set_genomic_ticklabels(
        tickpositions=np.arange(0, lengths.sum(), 50)[:-1],
        ticklabels=ticklabels,
        outer_radius=0.95)
    ax.tick_params(colors="0.3")
    #             verticalalignment="bottom")
    fig.legend((bar, lines[0]), ("Mappability", "Bias"), fontsize="x-small",
               bbox_to_anchor=(0.8, 0.1, 0.15, 0.15), frameon=False)


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.991 seconds)


.. _sphx_glr_download_auto_examples_biological_plot_circhic.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: https://mybinder.org/badge_logo.svg
      :target: https://mybinder.org/v2/gh/TrEE-TIMC/circhic/gh-pages?urlpath=lab/tree/notebooks/auto_examples/biological/plot_circhic.ipynb
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_circhic.py <plot_circhic.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_circhic.ipynb <plot_circhic.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
