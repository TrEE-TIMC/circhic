
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/biological_ccrescentus/plot_ccres_mcid.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_biological_ccrescentus_plot_ccres_mcid.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_biological_ccrescentus_plot_ccres_mcid.py:


==========================================
Zooming in chromosomal interaction domains
==========================================

.. GENERATED FROM PYTHON SOURCE LINES 6-60



.. image-sg:: /auto_examples/biological_ccrescentus/images/sphx_glr_plot_ccres_mcid_001.png
   :alt: plot ccres mcid
   :srcset: /auto_examples/biological_ccrescentus/images/sphx_glr_plot_ccres_mcid_001.png
   :class: sphx-glr-single-img





.. code-block:: default

    import numpy as np

    import matplotlib.pyplot as plt

    from circhic import datasets
    from circhic import CircHiCFigure

    from iced.normalization import ICE_normalization

    # Load the data, compute the cumulative raw counts.
    data = datasets.load_ccrescentus()
    counts_raw = data["counts"]
    lengths = data["nbins"]
    cumul_raw_counts = counts_raw.sum(axis=0)

    # Normalize the data using ICE, and keep the biases
    counts, bias = ICE_normalization(counts_raw, output_bias=True)

    #compute extreme values
    vmax=np.max([counts[i,(i+1)%counts.shape[0]] for i in range(counts.shape[0])])
    vmin=np.min(counts[counts>0])

    #plotting the data
    granularity = 0.5
    resolution = 9958

    fig = plt.figure(figsize=(6, 6))

    inner_radius, outer_radius = 0.4, 0.95
    inner_gdis, outer_gdis = 600000, 600000

    chrom_lengths = lengths * resolution
    circhicfig = CircHiCFigure(chrom_lengths, figure=fig)
    m, ax = circhicfig.plot_hic(counts, granularity=granularity, resolution = resolution,
                                outer_radius=outer_radius, inner_radius=inner_radius,
                                inner_gdis=inner_gdis, outer_gdis=outer_gdis,
                                vmin=vmin*100, vmax=vmax, cmap="bone_r",border_thickness=0.005)

    rax = circhicfig.plot_raxis()
    rax.set_yticklabels(["60", "0", "60"], fontsize="small")
    rax.set_ylabel("Genomic distance (kb)", fontsize="small", color="0.3", position=(0,1.03))
    rax.tick_params(colors="0.3")

    cab = circhicfig.set_colorbar(m, orientation="horizontal")
    cab.set_label("Normalized contact counts", fontsize="small")

    ticklabels = ["%d kb" % (i * 500) for i in range(7)]    
    tickpositions= [int(i*500000) for i in range(7)]
    ticklabels[0] = "oriC"
    ax = circhicfig.set_genomic_ticklabels(
        tickpositions=tickpositions,
        ticklabels=ticklabels,
        outer_radius=0.98,fontdict={'fontsize':"small"})
    ax.tick_params(colors="0.3")


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.064 seconds)


.. _sphx_glr_download_auto_examples_biological_ccrescentus_plot_ccres_mcid.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/TrEE-TIMC/circhic/gh-pages?urlpath=lab/tree/notebooks/auto_examples/biological_ccrescentus/plot_ccres_mcid.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_ccres_mcid.py <plot_ccres_mcid.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_ccres_mcid.ipynb <plot_ccres_mcid.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
